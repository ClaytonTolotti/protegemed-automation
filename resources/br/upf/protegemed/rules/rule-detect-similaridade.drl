/*
 created by Clayton Tolotti; claytontolotti@gmail.com on: 14/04/2018
*/
package br.upf.protegemed.rules

import br.upf.protegemed.beans.eventos.PericulosidadeFugaEvento
import br.upf.protegemed.beans.CapturaAtual
import br.upf.protegemed.utils.Utils
import br.upf.protegemed.utils.Calculos

import java.util.List
import java.util.ArrayList

global Float $resultado
global List<CapturaAtual> $listaCaptura
global PericulosidadeFugaEvento $periculosidadeFugaEvento

rule "rule-detected-similaridade-1"
	salience 3 //regra será disparada antes da relação de início e fuga.
	when
		$eventOneBefore : CapturaAtual( getEventos().getCodEvento() == 1) 
		$eventOneAfter : CapturaAtual( getEventos().getCodEvento() == 1
					&& $eventOneBefore.getTomada().getCodTomada() != getTomada().getCodTomada()
					&& $eventOneBefore.getSalaCirurgia().getCodSala() == $eventOneAfter.getSalaCirurgia().getCodSala()
				)
		$outlet	: CapturaAtual(
					this.getEventos().getCodEvento() == 6 
					&& this.getTomada().getCodTomada() != $eventOneBefore.getTomada().getCodTomada()
					&& this.getTomada().getCodTomada() == $eventOneAfter.getTomada().getCodTomada()
					&& this.getSalaCirurgia().getCodSala() == $eventOneAfter.getSalaCirurgia().getCodSala()
					,this after[0s] $eventOneAfter && $eventOneAfter after[0s] $eventOneBefore
				)
	then
		$listaCaptura = new ArrayList<CapturaAtual>();
		
		$resultado = Calculos.calcularSpearman($eventOneBefore, $eventOneAfter);
		$listaCaptura.add($eventOneBefore);
		$listaCaptura.add($eventOneAfter);
			
		$periculosidadeFugaEvento = new PericulosidadeFugaEvento(
			"similaridade",
			$listaCaptura,
			$resultado
		);
		insert($periculosidadeFugaEvento);
		Utils.logger(drools.getRule().getName());
end;

rule "rule-detected-similaridade-2"
	salience 2 //regra será disparada antes da relação de início e fuga.
	when
		$eventOneBefore : CapturaAtual( getEventos().getCodEvento() == 1) 
		$eventOneAfter : CapturaAtual( getEventos().getCodEvento() == 1
					&& $eventOneBefore.getTomada().getCodTomada() != getTomada().getCodTomada()
					&& $eventOneBefore.getSalaCirurgia().getCodSala() == $eventOneAfter.getSalaCirurgia().getCodSala()
				)
		$outlet	: CapturaAtual(
					this.getEventos().getCodEvento() == 6 
					&& this.getTomada().getCodTomada() == $eventOneBefore.getTomada().getCodTomada()
					&& this.getTomada().getCodTomada() != $eventOneAfter.getTomada().getCodTomada()
					&& this.getSalaCirurgia().getCodSala() == $eventOneBefore.getSalaCirurgia().getCodSala()
					,this after[0s] $eventOneAfter && $eventOneAfter after[0s] $eventOneBefore
				)
	then
		$listaCaptura = new ArrayList<CapturaAtual>();
		
		$resultado = Calculos.calcularSpearman($eventOneBefore, $eventOneAfter);
		$listaCaptura.add($eventOneBefore);
		$listaCaptura.add($eventOneAfter);
			
		$periculosidadeFugaEvento = new PericulosidadeFugaEvento(
			"similaridade",
			$listaCaptura,
			$resultado
		);
		
		insert($periculosidadeFugaEvento);
		Utils.logger(drools.getRule().getName());
end;
